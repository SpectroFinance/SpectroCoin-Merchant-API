{"name":"Spectro Coin Merchant API","tagline":"","body":"SpectroCoin Merchant API\r\n========================\r\nThis document describes [Spectro Coin](https://spectrocoin.com) merchant service API specification.\r\n\r\n# Contents\r\n\r\n* [Requirements](#requirements)\r\n* [API](#api)\r\n* [Merchant key pair](#merchant-key-pair)\r\n* [Signature](#signature)\r\n* [Example applications](#example-applications)\r\n\r\n# Requirements\r\n\r\n* Must have a SpectroCoin account ([Sign Up!](https://spectrocoin.com/en/signup.html)) to setup and test API. For merchant API usage in production you must approve your account.\r\n* Must [generate](#merchant-key-pair) private and public key pairs.\r\n* Must setup merchant API instance on Spectro Coin API configuration page.\r\n\r\n# API\r\n\r\n* [Interactive SpectroCoin merchant API operation list](https://spectrocoin.com/api/)\r\n* [Root Merchant REST based API address](https://spectrocoin.com/api/merchant/1/)\r\n\r\n## /createOrder\r\n\r\nMerchant who wants his customer order to be paid creates order at Spectro Coin with payment details and presents result to his customer. Merchant can also redirect his customer to returned redirect url where customer will be presented with interactive payment window.\r\n\r\n### Request\r\n\r\nRequest URL: https://spectrocoin.com/api/merchant/1/createOrder\r\n\r\nFor this method server accept only **POST** of **\"application/x-www-form-urlencoded\"** media type.\r\n\r\nSeq No. | Field | Type | Required | Example\r\n--------|-------|------|----------|--------\r\n1. | merchantId | Long | + | 12345\r\n2. | apiId | Long | + | 1\r\n3. | orderId | String | - | ABC001, Must be unique for all merchant API orders. If not provided, order request id will be assigned\r\n4. | payCurrency | String | + | BTC\r\n5. | payAmount | Double | + or receiveAmount | 123.45, 1.23456789 (BTC)\r\n6. | receiveAmount | Double | + or payAmount | 123.45, 1.23456789 (BTC)\r\n7. | description | String | - | Order ABC001 for User 123\r\n8. | culture | String | - | Language for response (\"en\", \"lt\", \"ru\", \"de\")\r\n9. | callbackUrl | String | - | https://merchant.com/orderCallback?user=123\r\n10. | successUrl | String | - | https://merchant.com/success?user=123\r\n11. | failureUrl | String | - | https://merchant.com/failure?user=123\r\n12. | sign | String | + | Generated order request signature\r\n\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://spectrocoin.com/api/merchant/1/createOrder HTTP/1.1\r\nAccept-Encoding: gzip,deflate\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 658\r\nHost: spectrocoin.com\r\nConnection: Keep-Alive\r\n\r\nmerchantId=169&apiId=1&orderId=Order%20123&payCurrency=BTC&payAmount=0.0&receiveAmount=50.0&description=My%20special%20order&culture=en&callbackUrl=https%3A%2F%2Fmerchan.com%2Fcallback&successUrl=https%3A%2F%2Fmerchan.com%2Fsuccess&failureUrl=https%3A%2F%2Fmerchan.com%2Ffailure&sign=r6NuZ0JCBSAGCpPlYG5eXLkSRyOqSncWj8j7LfLIiiWeZdeH0Yy2nZ4Osn0JJY9cqWnoT%2Fvn%2B0KjY7f9tdYQjk67XTFY%2Bn1yg41FkzfbDxF8LQWYinLpnBBCf5AlFACJJ26yBHXMxsPFn67khxOV55AGRJeJcw03anH%2FobjevHiOGkV9%2BjTVLwV553U6Y9Ud995D66f45QpPR54IgBBDhA%2BHNlwockLcEyzCMbwMPs0pnsfVO65x0if8TJ2MtwTCa5c%2B%2FuCAq%2BoafTRV9%2Bd9meTRbC%2BFTDf%2FAMyU9SiltpdIqoZPRypB7faBDZ5YVsQrRPIfD6Wy%2FtS6fb8MiFBnOw%3D%3D\r\n```\r\n\r\n### Response\r\n\r\n**JSON** formatted response of complex object `Order`.\r\n\r\nField | Type | Example\r\n------|------|--------\r\norderRequestId | Long | Order request id, Spectro Coin Id to track orders\r\norderId | String | ABC001\r\npayCurrency | String | BTC\r\npayAmount | Double | 123.45, 1.23456789 (BTC)\r\nreceiveCurrency | String | BTC, EUR\r\nreceiveAmount | Double | 123.45, 1.23456789 (BTC)\r\ndepositAddress | String | 1HZcE7ZbwnEKHYcKkva1uZoxZbFvRyK3fm\r\nredirectUrl | String | https://spectrocoin.com/en/pay/order/18-5fD2HgMK.html\r\nvalidUntil | Long | Timestamp (how many milliseconds have passed since January 1, 1970, 00:00:00 GMT) until order is valid.\r\n\r\n\r\n```json\r\n{\r\n\"depositAddress\":\"1HZcE7ZbwnEKHYcKkva1uZoxZbFvRyK3fm\",\r\n\"orderId\":\"18\",\r\n\"orderRequestId\":18,\r\n\"payAmount\":0.00246995,\r\n\"payCurrency\":\"BTC\",\r\n\"receiveAmount\":1.0,\r\n\"receiveCurrency\":\"EUR\",\r\n\"redirectUrl\":\"https://spectrocoin.com/en/pay/order/18-5fD2HgMK.html\",\r\n\"validUntil\":1401191587663\r\n}\r\n```\r\n\r\n### Callback\r\n\r\n**POST** request to merchant provided order callback url. Request provides information about current order status. Usually there will be several callbacks for a successful order (pending, paid).\r\nMerchant page must return HTTP Response **200** with content: **\\*ok\\*** for Spectro Coin API to confirm callback as sent successfully.\r\n\r\nComplex object `OrderCallback`.\r\n\r\nSeq No. | Field | Type | Example\r\n--------|-------|------|--------\r\n1. | merchantId | Long | 12345\r\n2. | apiId | Long | 1\r\n3. | orderId | String | ABC001\r\n4. | payCurrency | String | BTC\r\n5. | payAmount | Double | 123.45, 1.23456789 (BTC)\r\n6. | receiveCurrency | String | BTC, EUR\r\n7. | receiveAmount | Double | 123.45, 1.23456789 (BTC)\r\n8. | receivedAmount | Double | 123.45, 1.23456789 (BTC)\r\n9. | description | String | Order ABC001 for User 123\r\n10. | orderRequestId | Long | Order request id, Spectro Coin Id to track orders\r\n11. | status | Short | Order status\r\n12. | sign | String | Generated order callback signature\r\n\r\nOrder status table\r\n\r\nStatus Code | Order status | Description\r\n------------|--------------|------------\r\n1 | New | Start state when order is registered in Spectro Coin system\r\n2 | Pending | Payment (or part of it) was received but still not confirmed\r\n3 | Paid | Order is complete\r\n4 | Failed | Some error occurred\r\n5 | Expired | Payment was not received in time\r\n6 | Test | Test order\r\n\r\nExample HTTP request:\r\n\r\n```http\r\nPOST https://merchant.com/callback HTTP/1.1\r\nAccept-Encoding: gzip,deflate\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 578\r\nHost: merchant.com\r\nConnection: Keep-Alive\r\n\r\nmerchantId=169&apiId=1&orderId=Order%20123&payCurrency=BTC&payAmount=1.23456789&receiveCurrency=EUR&receiveAmount=50.0&receivedAmount=0.0&description=My%20special%20order&orderRequestId=123&status=1&sign=r6NuZ0JCBSAGCpPlYG5eXLkSRyOqSncWj8j7LfLIiiWeZdeH0Yy2nZ4Osn0JJY9cqWnoT%2Fvn%2B0KjY7f9tdYQjk67XTFY%2Bn1yg41FkzfbDxF8LQWYinLpnBBCf5AlFACJJ26yBHXMxsPFn67khxOV55AGRJeJcw03anH%2FobjevHiOGkV9%2BjTVLwV553U6Y9Ud995D66f45QpPR54IgBBDhA%2BHNlwockLcEyzCMbwMPs0pnsfVO65x0if8TJ2MtwTCa5c%2B%2FuCAq%2BoafTRV9%2Bd9meTRbC%2BFTDf%2FAMyU9SiltpdIqoZPRypB7faBDZ5YVsQrRPIfD6Wy%2FtS6fb8MiFBnOw%3D%3D\r\n```\r\n\r\n## Error result\r\n\r\nWhen calling any of API operation, it may result and error.\r\nErrors should be returned as **JSON** format on **203** http status code.\r\n\r\n```json\r\n[\r\n  {\r\n    \"code\": 1,\r\n    \"message\": \"apiId is required\"\r\n  },\r\n  {\r\n    \"code\": 1,\r\n    \"message\": \"merchantId is required\"\r\n  }\r\n]\r\n```\r\n\r\nError codes\r\n\r\nError code | Error message\r\n-----------|--------------\r\n1 | Validation errors\r\n2 | Bad signature\r\n3 | Not supported currency\r\n4 | Can't create order, please check your merchant account\r\n5 | Merchant order id exist\r\n6 | Check your merchantId and apiId\r\n97 | Unsupported Media Type\r\n99 | Please check your request\r\n100 | Unexpected error\r\n\r\n\r\n# Merchant key pair\r\n\r\nYou should create key pair (private and public keys) ([Wiki](http://en.wikipedia.org/wiki/Public-key_cryptography)) for your requests to be signed and validated by Spectro Coin.\r\n**Private key** must be kept safely by merchant without any disclosure.\r\n**Public key** must be inserted into configuration of specific Spectro Coin API (Create/Edit form of API details). This key will be used to check signature validity of any merchant API request signed by specific merchant and API.\r\n\r\n## Generate with OpenSSL\r\n\r\n### Private key generation\r\n\r\n```shell\r\n# generate a 2048-bit RSA private key\r\nopenssl genrsa -out \"C:\\private.pem\" 2048\r\n\r\n# convert private Key to PKCS#8 format (if you use Java)\r\nopenssl pkcs8 -topk8 -inform PEM -outform DER -in \"C:\\private.pem\" -out \"C:\\private.der\" -nocrypt\r\n```\r\n\r\n### Public key generation\r\n\r\n```shell\r\n# output public key portion in PEM format\r\nopenssl rsa -in \"C:\\private.pem\" -pubout -outform PEM -out \"C:\\public.pem\"\r\n```\r\n\r\n# Signature\r\n\r\nAll API requests must be signed with merchant private key so they can be validated with merchant public key (provided in API configuration). Some API request may result in callback from Spectro Coin, such request are also signed by Spectro Coin and must be validated by merchant using Spectro Coin public key.\r\n\r\nNumbers must be formatted with **0.0#######** number format:\r\n```\r\nnull => 0.0\r\n0 => 0.0\r\n0.0 => 0.0\r\n1.1 => 1.1\r\n1.123 => 1.123\r\n```\r\n\r\nExample URL encoded concatenated parameters:\r\n```\r\nmerchantId=169&apiId=1&orderId=L254S&payCurrency=BTC&payAmount=0.0&receiveAmount=20.0&description=Some+string+with+symbols+%25%3D%26&callbackUrl=http%3A%2F%2Ftestas.lt%2Fapi%2Fcheck\r\n```\r\n\r\n## Signing\r\n\r\nRequest to be signed must be converted to **UTF-8 URL encoded concatenated parameters** of one string line including parameter names and ordered in specific sequence specified in documentation.\r\nSignature must be **Base64 encoded**.\r\n\r\n### Java signing\r\n\r\n```java\r\nString formValue = \"merchantId=169&apiId=1&orderId=L254S&payCurrency=BTC&payAmount=0.0&receiveAmount=20.0&description=Some+string+with+symbols+%25%3D%26&callbackUrl=http%3A%2F%2Ftestas.lt%2Fapi%2Fcheck\";\r\nSignature ourSign = Signature.getInstance(\"SHA1withRSA\");\r\nourSign.initSign(privateKey);\r\nourSign.update(formValue.getBytes());\r\nreturn new BASE64Encoder().encode(ourSign.sign());\r\n```\r\n\r\n### PHP signing\r\n\r\n```php\r\n$data = \"merchantId=169&apiId=1&orderId=L254S&payCurrency=BTC&payAmount=0.0&receiveAmount=20.0&description=Some+string+with+symbols+%25%3D%26&callbackUrl=http%3A%2F%2Ftestas.lt%2Fapi%2Fcheck\";\r\n// fetch private key from file and ready it\r\n$private_pem_key = openssl_pkey_get_private($path_to_private_key);\r\n// compute signature\r\nopenssl_sign($data, $signature, $private_pem_key, OPENSSL_ALGO_SHA1);\r\n$encodedSignature = base64_encode($signature);\r\n```\r\n\r\n## Validating callbacks\r\n\r\nRequests coming from Spectro Coin to merchant pages are also signed. Merchant must validate signature of the request.\r\nRequest signature to be validated must be **Base64 decoded**.\r\nRequest must be converted to **UTF-8 URL encoded concatenated parameters** of one string line including parameter names and ordered in specific sequence specified in documentation.\r\n\r\n### Java validation\r\n\r\n```java\r\nString parameters = \"merchantId=25&apiId=25&orderId=L254S&payCurrency=BTC&payAmount=25.0&receiveCurrency=EUR&receiveAmount=245.0&description=Some+sting+with+symbols+%25%3D%26&orderRequestId=11&status=1\";\r\nString responseSign = \"qGy2ablxcWtoGVAS2YufkYVWT0jLSilaUtMkz6Z8P6Mn6qInewEfK5Bsn4BFRxg1suENJJF8LJGyJV6vZt3XLmAHoTJwRjWLij2FROdFthuVt/U4Ima6uFm6hkjseeNLvJtdLFYWSAyKkt7wpeLPA2QUspQbG0asOhwd8EeP+mZDSfvOwTv2OFvGWcVEPR6DOWKEaw5wW6ilM8yZKowQzhrqoCUyJN4pxK02PLTKGIb6YDu1nESrN6ebp7ugskYwcmynLWNOY8Tu1bdg0fWBF2uCgJkWpc9yy2UYbtpVO7sCjIe+dmojJzqCwS5/7Ny04Mf+ouj6oEchxHfUq7VpaA==\";\r\nSignature verifier = Signature.getInstance(\"SHA1withRSA\");\r\nverifier.initVerify(publicKey);\r\nverifier.update(parameters.getBytes());\r\nbyte[] bytes = new BASE64Decoder().decodeBuffer(responseSign);\r\nreturn verifier.verify(bytes);\r\n```\r\n\r\n### PHP validation\r\n\r\n```php\r\n$data = \"merchantId=25&apiId=25&orderId=L254S&payCurrency=BTC&payAmount=25.0&receiveCurrency=EUR&receiveAmount=245.0&description=Some+sting+with+symbols+%25%3D%26&orderRequestId=11&status=1\";\r\n$encodedSignature = \"QKpoaBL/P2tcFttFm/TVcn0utkgaOzEAOsZbSSOa+zntcxyJUijaM5egewRoRu68d4CoswTpkdOqaKdGrLWPNqQGujPHIX3q8Q0lK/C8GqN7MYHFrLxu+rpY0G4srIaDzXww4uOTkBIBFWn3TVI4AZAGm0/APlZZeCrhwIIkImYc8ab69zeqikyaMXRK0XMAD/8Fz9b+rUR342hMjFR+epZnNmWQpFtQLvB/SxlCZIZ+u1k2WLJYa7CChDePmdXNHgutvt1mQxLMpJmeDNjD2aOzF9+DPIqsOEkJ9RLJ8F0kQXnn9W02Av/a3GMVC7A/u/kxnKo3LRfkkkAAYkCKug==\"\r\n$public_key_pem = openssl_pkey_get_public($path_to_public_spectro_coin_key);\r\n$responseDecodedSign = base64_decode($encodedSignature);\r\n$validity = openssl_verify($data, $responseDecodedSign, $public_key_pem, OPENSSL_ALGO_SHA1);\r\n```\r\n\r\n# Example applications\r\n\r\nThere are made several sample SpectroCoin merchant API client applications. You should adapt them for your needs.\r\n\r\n## Java\r\n\r\nSample Java application could be found [here](https://github.com/SpectroFinance/SpectroCoin-Merchant-Java).\r\n\r\n## PHP\r\n\r\nSample PHP application could be found [here](https://github.com/SpectroFinance/SpectroCoin-Merchant-PHP).\r\n","google":"UA-51179757-1","note":"Don't delete this file! It's used internally to help with page regeneration."}